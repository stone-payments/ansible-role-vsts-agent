---
- name: Include user tasks
  include_tasks: user.yml
  when: dryrun is not defined
  tags: config

- name: Fetch latest downloadurl if variable vsts_server_url is not defined
  shell: "curl -s https://api.github.com/repos/Microsoft/vsts-agent/releases/latest | jq -r .assets[].browser_download_url | grep rhel"
  delegate_to: localhost
  register: githubapi_downloadurl_output
  when: vsts_agent_fullurl is not defined
  tags: fetch

- name: Register githubapi_downloadurl_output as fact in variable vsts_agent_fullurl
  set_fact:
    vsts_agent_fullurl: "{{ githubapi_downloadurl_output.stdout_lines[0] }}"
  when: vsts_agent_fullurl is not defined
  tags: fetch

- name: Download and unarchive
  unarchive:
    dest: "{{ vsts_agent_folder }}"
    src: "{{ vsts_agent_fullurl }}"
    remote_src: true
    owner: "{{ vsts_agent_user }}"
    group: "{{ vsts_agent_user }}"
    creates: "{{ vsts_agent_folder }}/config.sh"
  tags:
    - fetch
    - unzip

- name: Installation dependencies
  command: "./bin/installdependencies.sh"
  args:
    chdir: "{{ vsts_agent_folder }}"
  become: true
  changed_when: false
  when: dryrun is not defined

- name: Include tasks to configure VSTS agent
  include_tasks: "../common/configure.yml"
  when: dryrun is not defined
  tags: config

- name: Configure VSTS agent
  command: "sudo -u {{ vsts_agent_user }} {{ vsts_install_command }}"
  args:
    chdir: "{{ vsts_agent_folder }}"
    creates: "{{ vsts_agent_folder }}/.agent"
  no_log: true

- name: Install systemd service file
  template:
    src: vsts-agent.service.j2
    dest: /etc/systemd/system/vsts-agent.service
    mode: 0755
  become: true

- name: Enable and start 'vsts-agent' service
  systemd:
    name: vsts-agent
    enabled: true
    state: started
    daemon_reload: true
  become: true
  when: dryrun is not defined
  tags: service

- name: Check service status
  command: systemctl status vsts-agent
  changed_when: false

- name: Create apps directory
  file:
    path: "{{ vsts_apps_dir }}"
    owner: "{{ vsts_agent_user }}"
    group: "{{ (ansible_os_family == 'RedHat') | ternary('wheel', 'sudo') }}"
    mode: 0755
    state: directory
  when: vsts_apps_dir | length > 0
